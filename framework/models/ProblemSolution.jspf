<%!
    public static class ProblemSolution {
        public static final String FORM_NAME = "RKM:ProblemSolutionTemplate_Manageable_Join";
        public static final int FIELD_TITLE = 302300502;
        public static final int FIELD_PROBLEM = 302311205;
        public static final int FIELD_SOLUTION = 302311206;
        public static final int FIELD_TECHNICAL_NOTES = 302311202;
        public static final int FIELD_AUTHOR = 302300527;
        public static final int FIELD_ID = 302300507;
        public static final int[] FIELD_IDS = new int[] {
            FIELD_TITLE, FIELD_PROBLEM, FIELD_SOLUTION, FIELD_TECHNICAL_NOTES,
            FIELD_AUTHOR, FIELD_ID};

        public static ProblemSolution findById(com.bmc.arsys.api.ARServerUser serverUser, String id) throws com.bmc.arsys.api.ARException {
            String qualification = "'"+FIELD_ID+"' = \""+id+"\"";
            com.bmc.arsys.api.QualifierInfo qual = serverUser.parseQualification(FORM_NAME, qualification);
            com.bmc.arsys.api.Entry entry = serverUser.getOneEntryObject(
                FORM_NAME, qual, null, FIELD_IDS, false, null);
            if (entry == null) {
                return null;
            } else {
                return new ProblemSolution(entry);
            }
        }

        private com.bmc.arsys.api.Entry entry;
        public ProblemSolution(com.bmc.arsys.api.Entry entry) {
            this.entry = entry;
        }

        public String getTitle() {return getValue(FIELD_TITLE);}
        public String getProblem() {return getValue(FIELD_PROBLEM);}
        public String getSolution() {return getValue(FIELD_SOLUTION);}
        public String getTechnicalNotes() {return getValue(FIELD_TECHNICAL_NOTES);}
        public String getAuthor() {return getValue(FIELD_AUTHOR);}
        public String getId() {return getValue(FIELD_ID);}
        
        public String getValue(int fieldId) {
            Object value = entry.get(fieldId).getValue();
            if (value == null) {
                return null;
            } else {
                return value.toString();
            }
        }
    }
%>